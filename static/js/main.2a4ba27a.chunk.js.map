{"version":3,"sources":["components/Header.js","components/config.js","components/Search.js","App.js","serviceWorker.js","reducers/rootReducer.js","index.js"],"names":["Header","react_default","a","createElement","className","config","Search","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onChange","e","target","value","document","getElementById","style","background","setState","objectSpread","state","query","onSubmit","preventDefault","current_title","props","fetch_api","querySelector","reset","details","movie","isDetails","current_movie","onClose","_this2","onClick","backdrop_path","src","concat","poster_path","title","overview","vote_average","placeholder","bind","name","id","type","queries","results","length","map","result","key","Component","connect","ownProps","dispatch","q","fetch","then","response","json","payload","catch","err","App","components_Header","components_Search","Boolean","window","location","hostname","match","initialState","store","createStore","arguments","undefined","action","applyMiddleware","thunk","ReactDOM","render","es","src_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2a4ba27a.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Header = () => {\r\n  return (\r\n    <div className=\"header\">\r\n    <div className=\"header-inside\">\r\n      <div className=\"logo\">\r\n      <h1>TMDB API</h1>\r\n      </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","export let config = {\r\n  api_key: 'faa36238c863a0ec8cf6914c429d956d'\r\n}\r\n","import React, { Component } from 'react';\r\nimport { config } from './config.js';\r\nimport { connect } from 'react-redux';\r\n\r\nclass Search extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      query: '',\r\n      isDetails: false,\r\n      current_movie: '',\r\n      current_title: ''\r\n    }\r\n  }\r\n\r\n  onChange = (e) => {\r\n  if (e.target.value !== \"\") {\r\n    document.getElementById('btn').style.background = '#8a3dff';\r\n  } else {\r\n    document.getElementById('btn').style.background = '#e0e0e0';\r\n  }\r\n\r\n  this.setState({\r\n    ...this.state,\r\n    query: e.target.value\r\n  });\r\n  }\r\n\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.setState({\r\n      ...this.state,\r\n      current_title: this.state.query\r\n    });\r\n\r\n    this.props.fetch_api(this.state.query);\r\n    document.querySelector('.search-form').reset();\r\n  }\r\n\r\n  details = (movie) => {\r\n    this.setState({\r\n      ...this.state,\r\n      isDetails: true,\r\n      current_movie: movie\r\n    });\r\n  }\r\n\r\n  onClose = () => {\r\n    this.setState({\r\n      ...this.state,\r\n      isDetails: false,\r\n      current_movie: ''\r\n    });\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n\r\n       (this.state.isDetails) ? (\r\n        <div className=\"current-wrapper\">\r\n          <button className=\"btn-close\" onClick={this.onClose}>Close</button>\r\n        <div className=\"current-pic\">\r\n      {  (this.state.current_movie.backdrop_path !== null) ?  <img src={`http://image.tmdb.org/t/p/w500/${this.state.current_movie.backdrop_path}`} />\r\n      : (this.state.current_movie.poster_path !== null) ? <img src={`http://image.tmdb.org/t/p/w500/${this.state.current_movie.poster_path}`} /> : <div className=\"no-image\">No image provided</div>}\r\n        </div>\r\n        <div className=\"results-data\">\r\n          <h1>{this.state.current_movie.title}</h1>\r\n          <p className=\"overview\">{this.state.current_movie.overview}</p>\r\n          <p className=\"vote vote-current\"><span className=\"actualVote\">{this.state.current_movie.vote_average}</span><span className=\"toTen\"><span className=\"separator\">/</span>10</span></p>\r\n          </div>\r\n        </div>\r\n      )\r\n\r\n      : (\r\n        <div className=\"search-wrapper\">\r\n          <form className=\"search-form\" onSubmit={this.onSubmit}>\r\n            <input placeholder=\"Search movies or tv shows...\" onChange={this.onChange.bind(this)} name=\"query\" />\r\n            <button id=\"btn\" type=\"submit\">Search</button>\r\n          </form>\r\n\r\n          {(this.props.queries.results) && (this.props.queries.results.length === 0) && <div className=\"results-name\">There are no results for <span className=\"actual-result-title\">{this.state.current_title}</span></div>}\r\n\r\n          {(this.props.queries.results) && (this.props.queries.results.length > 0) ? <div className=\"results-name\">Results for <span className=\"actual-result-title\">{this.state.current_title}</span></div> : <div className=\"results-name\"></div>}\r\n\r\n          <div className=\"results-wrapper\">\r\n\r\n          {(this.props.queries.results) && this.props.queries.results.map(result => (\r\n                <div className=\"results\" key={result.id}>\r\n\r\n                <div className=\"results-pic\">\r\n              {  (result.backdrop_path !== null) ?  <img onClick={() => this.details(result)} src={`http://image.tmdb.org/t/p/w500/${result.backdrop_path}`} />\r\n              : (result.poster_path !== null) ? <img onClick={() => this.details(result)} src={`http://image.tmdb.org/t/p/w500/${result.poster_path}`} /> : <div className=\"no-image\">No image provided</div>}\r\n\r\n                </div>\r\n\r\n                <div className=\"results-data\">\r\n                <span>\r\n                  <h4 onClick={() => this.details(result)}>{result.title}</h4>\r\n                  <p className=\"vote\"><span className=\"actualVote\">{result.vote_average}</span><span className=\"toTen\"><span className=\"separator\">/</span>10</span></p>\r\n                  <button className=\"btn-details\" onClick={() => this.details(result)}>See details</button>\r\n                  </span>\r\n                </div>\r\n\r\n                </div>\r\n              ))}\r\n          </div>\r\n\r\n        </div>\r\n      )\r\n   );\r\n }\r\n}\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return  {\r\n\r\n    fetch_api: (q) => {\r\n        fetch(`https://api.themoviedb.org/3/search/movie?api_key=${config.api_key}&query=${q}`)\r\n\r\n        .then( response => response.json())\r\n        .then( json => {\r\n          dispatch({type: \"FETCH_API\", payload: json})\r\n        })\r\n        .catch( (err) => {\r\n          dispatch({type: \"FETCH_ERROR\", payload: err})\r\n        })\r\n      }\r\n    }\r\n  }\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  return {\r\n    \"queries\": state.queries\r\n  }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Search);\r\n","import React from 'react';\nimport Header from './components/Header';\nimport Search from './components/Search';\nimport './App.scss';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n    <Header />\n    <div className=\"main\">\n    <Search />\n\n    </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","let initialState = {\r\n  queries:[]\r\n}\r\n\r\nexport const rootReducer = (state = initialState, action) => {\r\n\r\nswitch (action.type) {\r\n  case \"FETCH_API\":\r\n    return {\r\n      ...state,\r\n      queries: action.payload\r\n    }\r\n\r\n  case \"FETCH_ERROR\":\r\n  return {\r\n    ...state,\r\n    queries: action.payload\r\n  }\r\n\r\n  default: {\r\n    return {\r\n      ...state\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\n      return state;\r\n  }\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {createStore, applyMiddleware} from 'redux';\nimport thunk from 'redux-thunk';\nimport {Provider} from 'react-redux';\nimport {rootReducer} from './reducers/rootReducer';\n\n\nconst store = createStore(rootReducer, applyMiddleware(thunk));\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}